import { prismaClient } from "./db";
import express from "express";
import { z } from "zod";

export const app = express();

app.use(express.json());

const sumInput = {
  a: z.number(),
  b: z.number(),
};

app.post("/sum", async (req, res) => {
  const parsedData = z.object(sumInput).safeParse(req.body);

  if (!parsedData.success) {
    return res.status(411).json({ message: "Invalid input" });
  }

  const { a, b } = parsedData.data;

  if (a > 1000000 || b > 1000000) {
    res.status(422).json({ answer: "Cannot support larger numbers" });
    return;
  }

  const sum = a + b;

  const response = await prismaClient.request.create({
    data: {
      a: a,
      b: b,
      answer: sum,
      type: "sum",
    },
  });

  console.log(response);

  // we are logging response to see the id generated by prisma mock
  // the values we mocked manually in test file for just some specific
  // case , we will get that value here when we run the test

  res.status(200).json({ answer: sum, id: response.id });
});

app.post("/product", async (req, res) => {
  const parsedData = z.object(sumInput).safeParse(req.body);

  if (!parsedData.success) {
    return res.status(411).json({ message: "Invalid input" });
  }

  const { a, b } = parsedData.data;

  const product = a * b;

  await prismaClient.request.create({
    data: {
      a: a,
      b: b,
      answer: product,
      type: "product",
    },
  });

  res.status(200).json({ answer: product });
});
